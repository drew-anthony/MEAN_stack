> use my_first_db
switched to db my_first_db
> db.createCollection(students, name, home_state, lucky_number, birthday)
2018-08-06T11:18:06.601-0500 E QUERY    [js] ReferenceError: students is not defined :
@(shell):1:1
> createCollection(students)
2018-08-06T11:18:27.674-0500 E QUERY    [js] ReferenceError: createCollection is not defined :
@(shell):1:1
> db.createCollection(students)
2018-08-06T11:18:38.096-0500 E QUERY    [js] ReferenceError: students is not defined :
@(shell):1:1
> db.createCollection("students")
{ "ok" : 1 }
> db.collection.createIndexes({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER,
year: NUMBER}}
...
...
>
> db.students.createIndexes({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
2018-08-06T11:47:43.201-0500 E QUERY    [js] ReferenceError: STRING is not defined :
@(shell):1:28
> db.students.createIndexes(name, home_state, lucky_number, birthday)2018-08-06T11:48:47.264-0500 E QUERY    [js] ReferenceError: name is not defined :@(shell):1:1> db.students.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:19db.students.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:1990})tudents.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:2018-08-06T11:56:15.712-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:23:29, year:> 90})tudents.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:> 90})tudents.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:> 90})tudents.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:> 90})
>>>
>> db.students.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:1990}))
2018-08-06T11:56:38.183-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:23
> db.students.Insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:1990}))
2018-08-06T11:57:03.515-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:23
> db.students.insert(name: "Drew", home_state:"Oklahoma", lucky_number: "7", birthday: {month:09, day:29, year:1990})
2018-08-06T11:57:15.731-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:23
> db.students.insert({name: "Drew", home_state:"Oklahoma", lucky_number: 7, birthday: {month:09, day:29, year:1990}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Cory", home_state:"Oklahoma", lucky_number: 15, birthday: {month:01, day:15, year:1985}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Claire", home_state:"Japan", lucky_number: 12, birthday: {month:03, day:12, year:1989}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Jake", home_state:"Missouri", lucky_number: 23, birthday: {month:05, day:10, year:1983}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Frank", home_state:"Oklahoma", lucky_number: 7, birthday: {month:08, day:9, year:1978}})
WriteResult({ "nInserted" : 1 })
> db.students.find().pretty()
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        }
}
{
        "_id" : ObjectId("5b687ed6c9e347556710b751"),
        "name" : "Cory",
        "home_state" : "Oklahoma",
        "lucky_number" : 15,
        "birthday" : {
                "month" : 1,
                "day" : 15,
                "year" : 1985
        }
}
{
        "_id" : ObjectId("5b687eeec9e347556710b752"),
        "name" : "Claire",
        "home_state" : "Japan",
        "lucky_number" : 12,
        "birthday" : {
                "month" : 3,
                "day" : 12,
                "year" : 1989
        }
}
{
        "_id" : ObjectId("5b687efbc9e347556710b753"),
        "name" : "Jake",
        "home_state" : "Missouri",
        "lucky_number" : 23,
        "birthday" : {
                "month" : 5,
                "day" : 10,
                "year" : 1983
        }
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        }
}
> db.students.find(lucky_number:7).pretty()
2018-08-06T12:03:55.177-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:29
> db.students.find(home_state:"Oklahoma").pretty()
2018-08-06T12:04:36.548-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:27
> db.students.find(home_state:"Oklahoma")
2018-08-06T12:05:12.686-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:27
> db.students.find({home_state:"Oklahoma"}).pretty()
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        }
}
{
        "_id" : ObjectId("5b687ed6c9e347556710b751"),
        "name" : "Cory",
        "home_state" : "Oklahoma",
        "lucky_number" : 15,
        "birthday" : {
                "month" : 1,
                "day" : 15,
                "year" : 1985
        }
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        }
}
> db.students.find({lucky_number:>3}).pretty()
2018-08-06T12:06:31.303-0500 E QUERY    [js] SyntaxError: expected expression, got '>' @(shell):1:31
> db.students.find({lucky_number:3<}).pretty()
2018-08-06T12:06:49.757-0500 E QUERY    [js] SyntaxError: expected expression, got '}' @(shell):1:33
> db.students.find({lucky_number:7}).pretty()
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        }
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        }
}
> db.students.find({lucky_number:<3}).pretty()
2018-08-06T12:09:41.865-0500 E QUERY    [js] SyntaxError: expected expression, got '<' @(shell):1:31
> db.students.find({lucky_number:$gt(3)}).pretty()
2018-08-06T12:10:59.374-0500 E QUERY    [js] ReferenceError: $gt is not defined :
@(shell):1:19
> db.students.find({lucky_number:({$gt3})}).pretty()
2018-08-06T12:12:41.082-0500 E QUERY    [js] ReferenceError: $gt3 is not defined :
@(shell):1:34
> db.students.find({({$gt3})lucky_number}).pretty()
2018-08-06T12:13:43.332-0500 E QUERY    [js] SyntaxError: invalid property id @(shell):1:18
> db.students.find({({lucky_number:$gt3})}).pretty()
2018-08-06T12:14:04.250-0500 E QUERY    [js] SyntaxError: invalid property id @(shell):1:18
> db.students.find({lucky_number: {$gt3}}).pretty()
2018-08-06T12:23:23.361-0500 E QUERY    [js] ReferenceError: $gt3 is not defined :
@(shell):1:34
> db.students.find({lucky_number: {$gt: 3}}).pretty()
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        }
}
{
        "_id" : ObjectId("5b687ed6c9e347556710b751"),
        "name" : "Cory",
        "home_state" : "Oklahoma",
        "lucky_number" : 15,
        "birthday" : {
                "month" : 1,
                "day" : 15,
                "year" : 1985
        }
}
{
        "_id" : ObjectId("5b687eeec9e347556710b752"),
        "name" : "Claire",
        "home_state" : "Japan",
        "lucky_number" : 12,
        "birthday" : {
                "month" : 3,
                "day" : 12,
                "year" : 1989
        }
}
{
        "_id" : ObjectId("5b687efbc9e347556710b753"),
        "name" : "Jake",
        "home_state" : "Missouri",
        "lucky_number" : 23,
        "birthday" : {
                "month" : 5,
                "day" : 10,
                "year" : 1983
        }
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        }
}
> db.students.updateMany({}, {$push: {interests: {$each: ['coding', 'fantasy football', 'stats', 'baseball']}}})
{ "acknowledged" : true, "matchedCount" : 5, "modifiedCount" : 5 }
> db.students.updateMany({}, {$push: {interests: {$each: ['brunch', 'MongoDB']}}}){ "acknowledged" : true, "matchedCount" : 5, "modifiedCount" : 5 }
> db.students.updateOne({lucky_number: 7}, {$push: {interests: ['taxes']}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.students.find({lucky_number:7}).pretty(){
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB",
                [
                        "taxes"
                ]
        ]
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ]
}
> db.students.updateOne({lucky_number: 7}, {$pull: {array_key: 'taxes'}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 0 }
> db.students.find({lucky_number:7}).pretty()
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB",
                [
                        "taxes"
                ]
        ]
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ]
}
> db.students.updateOne({lucky_number: 7}, {$pull: {array_key: taxes}})
2018-08-06T12:53:16.125-0500 E QUERY    [js] ReferenceError: taxes is not defined :
@(shell):1:51
> db.students.updateOne({lucky_number: 7}, {$pull: {array_key: ['taxes']}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 0 }
> db.students.find({lucky_number:7}).pretty()
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB",
                [
                        "taxes"
                ]
        ]
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ]
}
> db.students.findOneAndDelete({lucky_number: 7}, {$pull: {array_key: ['taxes']}})
{
        "_id" : ObjectId("5b687e49c9e347556710b750"),
        "name" : "Drew",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 9,
                "day" : 29,
                "year" : 1990
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB",
                [
                        "taxes"
                ]
        ]
}
> db.students.findOneAndDelete({array_key: ['taxes']}})
2018-08-06T12:56:16.667-0500 E QUERY    [js] SyntaxError: missing ) after argument list @(shell):1:51
> db.students.find({lucky_number:7}).pretty()
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ]
}
> db.students.findOneAndDelete({name:'claire'})
null
> db.students.findOneAndDelete({"name":'claire'})
null
> db.students.findOneAndDelete({name:'claire'}, {$pull: {name:'claire'}})
null
> db.students.findOneAndDelete({name:'Claire'})
{
        "_id" : ObjectId("5b687eeec9e347556710b752"),
        "name" : "Claire",
        "home_state" : "Japan",
        "lucky_number" : 12,
        "birthday" : {
                "month" : 3,
                "day" : 12,
                "year" : 1989
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ]
}
> db.students.findOneAndDelete({lucky_number: {$gt: 5}})
{
        "_id" : ObjectId("5b687ed6c9e347556710b751"),
        "name" : "Cory",
        "home_state" : "Oklahoma",
        "lucky_number" : 15,
        "birthday" : {
                "month" : 1,
                "day" : 15,
                "year" : 1985
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ]
}
> db.students.updateMany({}, {$currentDate: {updated_on:true}}, {mutli:true})
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }
> db.students.find().pretty()
{
        "_id" : ObjectId("5b687efbc9e347556710b753"),
        "name" : "Jake",
        "home_state" : "Missouri",
        "lucky_number" : 23,
        "birthday" : {
                "month" : 5,
                "day" : 10,
                "year" : 1983
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ],
        "updated_on" : ISODate("2018-08-06T18:10:02.119Z")
}
{
        "_id" : ObjectId("5b687f0ac9e347556710b754"),
        "name" : "Frank",
        "home_state" : "Oklahoma",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 8,
                "day" : 9,
                "year" : 1978
        },
        "interests" : [
                "coding",
                "fantasy football",
                "stats",
                "baseball",
                "brunch",
                "MongoDB"
        ],
        "updated_on" : ISODate("2018-08-06T18:10:02.123Z")
}
>