{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Restful Tasks CRUD\\n  </h1>\\n</div>\\n<h2>All the Tasks: </h2>\\n<button (click)=\\\"tasksOnClick()\\\">Click to get all tasks</button>\\n<div *ngFor=\\\"let x of tasks\\\" >\\n  <p *ngIf=\\\"x.title\\\">\\n    {{x.title}} - {{x.description}}\\n  </p>\\n  <form (submit) = \\\"onDelete(x._id)\\\" class=\\\"postForm\\\">\\n      <input type=\\\"submit\\\" value=\\\"DELETE\\\" />\\n  </form>\\n  <form (submit) = \\\"editOnClick(x)\\\" class=\\\"postForm\\\">\\n      <input type=\\\"submit\\\" value=\\\"EDIT\\\" />\\n  </form>\\n  <div *ngIf=\\\"x.showEditForm\\\">\\n    <form (submit) = \\\"onEdit(x)\\\" class=\\\"postForm\\\">\\n      {{x.title}}\\n      <label>Title:\\n        <input type=\\\"text\\\" name=\\\"editTask.title\\\" [(ngModel)] = \\\"x.title\\\" />\\n      </label>\\n      <label>Description:\\n        <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)] = \\\"x.description\\\" />\\n      </label>\\n      <input type=\\\"submit\\\" value=\\\"EDIT\\\" />\\n    </form>\\n  </div>\\n</div>\\n<h2>The Task: </h2>\\n<input (keyup)=\\\"taskOnClick($event)\\\">\\n<div *ngFor=\\\"let x of task\\\" >\\n    <p *ngIf=\\\"x\\\">{{x}}</p>\\n</div>\\n<form (submit) = \\\"onSubmit()\\\" class=\\\"postForm\\\">\\n  <p>{{newTask | json}}</p>\\n  <label>Task title:\\n    <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)] = \\\"newTask.title\\\" />\\n  </label>\\n  <label>Task description:\\n    <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)] = \\\"newTask.description\\\" />\\n  </label>\\n  <input type=\\\"submit\\\" value=\\\"Create Task\\\" />\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  tasks: any;\n  task = [];\n  id = '';\n  newTask: any;\n  editTask = [];\n  showEditForm = false;\n  self = this;\n\n  constructor(private _httpService: HttpService){}\n   ngOnInit(){\n      this.newTask = {title: \"\", description: \"\"}\n   }\n  tasksOnClick(){\n    let observable = this._httpService.getTasks()\n    observable.subscribe(data => {\n      console.log(\"Got our data!\", data)\n      this.tasks = data;\n      console.log(\"Got our tasks!\", this.tasks)\n    })\n  }\n  taskOnClick(event: any){\n    this.task = [];\n    this.id = event.target.value;\n    let observable = this._httpService.getTask(this.id)\n    observable.subscribe(data => {\n      console.log(\"Clicked the button!\", this.id)\n      this.task = data['task'];\n      console.log(\"Got our task!\", this.task)\n    })\n  }\n  // editOnClick(task_id){\n  //   console.log(\"Task we need to edit\", task_id);\n  //\n  //   this.editTask = [];\n  //   let observable = this._httpService.getTask(task_id)\n  //   observable.subscribe(data => {\n  //     this.editTask = data['task'];\n  //     console.log(\"Task to edit\", this.editTask, \"Task title\", this.editTask[0].title);\n  //     this.showEditForm = true;\n  //   })\n  // }\n  editOnClick(task){\n    console.log(\"Task we need to edit\", task._id);\n\n\n      console.log(\"Task to edit\", task, \"Task title\", task.title);\n      task.showEditForm = true;\n\n  }\n  onSubmit(){\n    let observable = this._httpService.addTask(this.newTask);\n    observable.subscribe(data => {\n      console.log(\"Got data from post back\", data);\n      this.newTask = {title: \"\", description: \"\"}\n      this.tasksOnClick();\n    })\n  }\n  onDelete(task_id){\n    let observable = this._httpService.deleteTask(task_id);\n    observable.subscribe(data => {\n      console.log(\"Got data from post back\", data);\n      this.tasksOnClick();\n    })\n  }\n  onEdit(editTask){\n    editTask.showEditForm = false;\n    console.log(\"Edit the task\", editTask._id)\n    let observable = this._httpService.editTask(editTask);\n    observable.subscribe(data => {\n      console.log(\"Got data from post back\", data);\n    })\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class HttpService {\n\n  constructor(private _http: HttpClient) {\n    console.log(\"1\")\n      //this.getTasks();\n      //this.getTask();\n  }\n  getTasks(){\n    //console.log('hi');\n    // our http response is an Observabele, store in in a variable\n    //let tempObservable = this._http.get('/tasks');\n    // subscribe to the Observable and provide the code we would like to do with our data from the response\n    //tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n    return this._http.get('/tasks');\n  }\n  getTask(task_id){\n    console.log('ID is', task_id);\n    // let tempObservable = this._http.get('/tasks/5a84f4c3d7dee2b8012d96ae');\n    // tempObservable.subscribe(data => console.log(\"Got the task!\", data));\n    return this._http.get('/tasks/'+task_id);\n  }\n  addTask(newtask){\n    return this._http.post('/tasks', newtask);\n  }\n  deleteTask(task_id){\n    console.log('request to delete');\n    return this._http.delete('/tasks/'+task_id);\n  }\n  editTask(editTask){\n    console.log('request to edit', editTask._id);\n    return this._http.put('/tasks/'+editTask._id, editTask);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}