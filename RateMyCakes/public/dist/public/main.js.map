{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cake.ts","webpack:///./src/app/cake/cake.component.css","webpack:///./src/app/cake/cake.component.html","webpack:///./src/app/cake/cake.component.ts","webpack:///./src/app/comment.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#scroll{\\r\\n    overflow: auto;\\r\\n    height: 300px;\\r\\n}\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{head}}\\n  </h1>\\n</div>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-4\\\">\\n  <form (submit)=\\\"addCake()\\\">\\n    <h3>Submit a cake to be rated</h3>\\n    <hr class=\\\"my-4\\\">\\n    <label>Baker Name:\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"createCake.title\\\" [(ngModel)]=\\\"createCake.title\\\" #name='ngModel'>\\n    </label>\\n    <br>\\n    <br>\\n    <label>Image URL:\\n      <input type=\\\"url\\\" class=\\\"form-control\\\" name=\\\"createCake.description\\\" [(ngModel)]=\\\"createCake.description\\\">\\n    </label>\\n    <br>\\n    <br>\\n    <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Create Cake\\\" />\\n    <hr class=\\\"my-4\\\">\\n  </form>\\n  </div>\\n  <div class=\\\"col-8\\\" id=\\\"scroll\\\">\\n    <div *ngFor='let x of newCakes'>\\n      <h3>{{ x.title }}</h3>\\n      <img src =\\\"{{ x.description }}\\\" (click)=\\\"getCake(x)\\\" alt=\\\"image\\\" width=\\\"20%\\\" height=\\\"20%\\\">\\n      <button (click)=\\\"deleteCake(x._id)\\\">Delete</button>\\n      <div class=\\\"btn-group dropright\\\">\\n      <form (submit)=\\\"addComment(x._id)\\\">\\n        <div class=\\\"form-group\\\">\\n          <select class=\\\"form-control\\\" name=\\\"createComment.rate\\\" [(ngModel)]=\\\"createComment.rate\\\">\\n            <option value=1>1 Star</option>\\n            <option value=2>2 Stars</option>\\n            <option value=3>3 Stars</option>\\n            <option value=4>4 Stars</option>\\n            <option value=5>5 Stars</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <textarea class=\\\"form-control\\\" name=\\\"createComment.comment\\\" [(ngModel)]=\\\"createComment.comment\\\" rows=\\\"3\\\"></textarea>\\n        </div>\\n          <div class=\\\"col-auto\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark mb-2\\\">Submit</button>\\n          </div>\\n      </form>\\n  </div>\\n  <hr>\\n  </div>\\n  </div>\\n</div>\\n  <div>\\n    <app-cake *ngIf=\\\"showCake\\\" [getCake]=\\\"showCake\\\"></app-cake>\\n  </div>\\n  </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { Cake } from './cake';\nimport { Rate } from './comment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private _httpService: HttpService){}\n  head = 'Rate My Cakes';  \n  newCakes: Cake[];\n  newComments: Rate[];\n  showCake: Cake;\n  createCake: Cake = new Cake();\n  createComment: Rate = new Rate();\n  removeCake: Cake;\n  sum = 0;\n  avg = 0;\n\n  ngOnInit(){\n    this._httpService.getCakes().subscribe(newCakes => this.newCakes = newCakes as Cake[]);\n    this._httpService.getCakes().subscribe(newComments => this.newComments = newComments as Rate[]);\n  }\n  addCake(){\n    this._httpService.addCake(this.createCake).subscribe(newCake => this.newCakes.push(newCake as Cake))\n  }\n  getCake(cake): void{\n    console.log(cake)\n    // this._httpService.showCake(cake).subscribe(cake => this.showCake = cake as Cake)\n    this.showCake = cake;\n    for(var i of cake.comments){\n      if(i['rate']){\n        this.sum += i['rate'];\n      }\n    }\n    this.avg = this.sum/cake.comments.length\n    console.log(this.avg)\n  }\n  clear(): void{\n    this.showCake = undefined;\n  }\n  editCake(cake_id: number, cake: Cake): void{\n    // this.editCake = cake;\n    this._httpService.editCake(cake_id, cake).subscribe(cake => this.ngOnInit());\n  }\n  deleteCake(cake_id: number): void{\n    this._httpService.removeCake(cake_id).subscribe(cake => this.ngOnInit());\n  }\n  addComment(cake_id: number): void{\n    console.log(cake_id);\n    this._httpService.addComments(cake_id, this.createComment).subscribe(newComment => this.newComments.push(newComment as Rate))\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CakeComponent } from './cake/cake.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CakeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Cake{\r\n    title: String;\r\n    description: String;\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <div>\\n        Average Rating: {{avg}}\\n      <h2>{{getCake.title}}</h2>\\n      <img src=\\\"{{getCake.description}}\\\" alt=\\\"image\\\" width=\\\"20%\\\" height=\\\"75%\\\">\\n    </div>\\n    \\n    <div>        \\n      <div *ngFor=\\\"let x of getCake.comments\\\"> \\n      <h2></h2>     \\n      <h2>{{x.comment}}</h2>\\n    </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Cake } from '../cake'\n\n@Component({\n  selector: 'app-cake',\n  templateUrl: './cake.component.html',\n  styleUrls: ['./cake.component.css']\n})\nexport class CakeComponent implements OnInit {\n  @Input() getCake: any;\n  sum=0;\n  avg=0\n  constructor() { }\n\n  ngOnInit() {\n    this.sum=0;\n    this.avg=0;\n    for(var i of this.getCake.comments){\n      if(i['rate']){\n        this.sum += i['rate'];\n      }\n    }\n    this.avg = this.sum/this.getCake.comments.length\n    console.log(this.avg)\n  }\n  }\n\n","export class Rate{\r\n    rate: Number;\r\n    comment: String;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Cake } from './cake';\nimport { Rate } from './comment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient){\n  }\n  getCakes(){\n    return this._http.get('/cakes');\n }\n//  showCake(cake_id: number){\n//    return this._http.get(`/cakes/${cake_id}`);\n//  }\n addCake(newCake: Cake){\n   return this._http.post('/cakes', newCake);\n }\n editCake(cake_id: number, newCake: Cake){\n   return this._http.put(`/cakes/${cake_id}`, newCake);\n }\n removeCake(cake_id: number){\n   return this._http.delete(`/cakes/${cake_id}`)\n }\n addComments(cake_id: number, newComment: Rate){\n   console.log(newComment)\n   return this._http.post(`/cakes/${cake_id}`, newComment);\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}